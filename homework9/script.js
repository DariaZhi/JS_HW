const data = []   
const formCreateElement = document.querySelector('#formCreate')
const listTodo = document.querySelector('#list')


formCreateElement.addEventListener('submit', handleSubmitFormCreate)
listTodo.addEventListener('change', handleChangeTodo) // –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π
listTodo.addEventListener('click', handleRemoveTodo)


function handleSubmitFormCreate(event) {
    event.preventDefault()

    const date = new Date()
    const todo = {
        id: date.getTime(),
        createdAt: date,
        isChecked: false
    }

    const formData = new FormData(formCreateElement)

    for (let [name, value] of formData) {
        console.log(name, value)
        todo[name] = value
    }

    data.push(todo)


    formCreateElement.reset()

    render()

}



function todoTemplate({ title, id, isChecked, createdAt, priority, estimate }) {
    const checkedAttr = isChecked ? 'checked' : ''

    const creationDate = buildDate(createdAt)

    const stars = buildPriority(priority)

    const h = setEstimate(estimate)

    return `
       <div class="island__item">
          <div class="form-check d-flex align-items-center">
              <input 
                 class="form-check-input" 
                 type="checkbox" 
                 ${checkedAttr}
                 id="${id}"
                 data-id="${id}">

              <label class="form-check-label ms-3 me-3" for="${id}">
                 ${title}
              </label>

              <time class="ms-auto me-2">${creationDate}</time>
            
              <span class="badge pe-3">${stars}</span>


              <span class="badge estimate pe-3">${h}</span> 


              <button
                 class="btn btn-sm btn-danger" 
                 type="button" 
                 data-role="remove"
                 data-id="${id}">
                 üóëÔ∏è
              </button>
          </div>
       </div>
   `
}



function handleChangeTodo(event) {
    const { target } = event
    const { id } = target.dataset

    data.forEach((item) => {
        if (item.id == id) {
            item.isChecked = target.checked
        }
    })

    const parentElement = target.closest('.island__item') // –Ω–∞—Ö–æ–¥–∏–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç
    console.log(parentElement)
    console.log( target )
    parentElement.classList.toggle('.island__item_checked')  // –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å–ª–∏—Å—Ç –∏ –∏–¥–µ–º –≤ css —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å —á–µ–∫–Ω—É—Ç–æ–µ todo –ø–µ—Ä–µ—á–µ—Ä–∫–Ω—É—Ç—ã–º –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞

}



function handleRemoveTodo(event) {
    const { target } = event

    if (target.dataset.role != 'remove') return

    const { id } = target.dataset

    data.forEach((item, index) => {
        if (item.id == id) {
            delete data[index]
        }
    })

    render()
}




function transformData(date) {
    return date < 10 ? `0${date}` : date
}

function buildDate(date) {

    let day = transformData(date.getDate())
    let month = transformData(date.getMonth() + 1)
    let year = date.getFullYear()

    return `${day}.${month}.${year}`
}




function buildPriority(count) {
    let stars = ''
    for (let i = 0; i < count; i++) {
        stars = stars + 'üåü'
    }

    return stars

}




function setEstimate(time) {           
    if (time == 0) {
        return ' '
    } else {
        return (time + 'h')
    }
}




function render() {
    let result = ''

    data.forEach((todo) => {
        const template = todoTemplate(todo)    // –ø–æ—á–µ–º—É —Ç—É—Ç —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è, –∫–æ–≥–¥–∞ –º—ã –ø–µ—Ä–µ–¥–∞—ë–º –≤ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –æ–±—ä–µ–∫—Ç?

        result = result + template
    })

    listTodo.innerHTML = result
}



// –≤—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ id. –ú–æ–∂–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Ç–æ–º, –ø–æ—á–µ–º—É –æ–Ω –Ω—É–∂–µ–Ω? 

// –º–æ–∂–Ω–æ –ª–∏ —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫, —á—Ç–æ–±—ã —Ä–∞–º–∫–∞ select, –≤ –∫–æ—Ç–æ—Ä–æ–π –º—ã –≤—ã–±–∏—Ä–∞–µ–º priority, –Ω–µ –∑–∞–≥–æ—Ä–∞–ª–∞—Å—å –≥–æ–ª—É–±—ã–º –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –º—ã –æ–±–æ–∑–Ω–∞—á–∏–ª–∏ priority? –ü–æ–∫–∞ –Ω–µ –∫–ª–∏–∫–Ω—É –≥–¥–µ-—Ç–æ –≤–æ–∑–ª–µ, —Ä–∞–º–∫–∞ —Å–µ–ª–µ–∫—Ç–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –≥–æ–ª—É–±–æ–π

// –Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞. –ú–Ω–µ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã —Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å –≤ –Ω–∞—á–∞–ª–æ







